{"version":3,"sources":["components/api/fetchData.js","components/style.js","components/Video/style.js","components/Video/Video.js","components/Videos.js","App.js","index.js"],"names":["fetchData","query","a","axios","get","data","makeStyles","theme","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","root","maxWidth","media","height","width","card","cardContent","paddingTop","display","justifyContent","Video","result","console","log","classes","useStyles","link","id","videoId","Card","className","CardMedia","title","src","frameborder","allow","allowfullscreen","CardContent","cardcontent","Typography","variant","gutterBottom","snippet","Videos","obj","items","Grid","container","justify","grid","map","video","item","App","useState","setResult","setQuery","search","e","key","CssBaseline","Table","striped","bordered","hover","style","margin","color","fontSize","type","placeholder","value","onChange","target","onKeyPress","onClick","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f528a9f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst YOUTUBE_API_KEY = \"AIzaSyBE-oQCWJ8nDKxmZjrc8LVwsnLMcGCqEV8\";\r\nconst YOUTUBE_API = 'https://www.googleapis.com/youtube/v3/search';\r\n// https://www.googleapis.com/youtube/v3/search?part=snippet&key=AIzaSyD8FVYsAVpciKLBCgAJkO0h2hoJke9VXF4&type=video&maxResults=5&q=trump\r\nexport const fetchData = async (query) => {\r\n    const { data } = await axios.get(`${YOUTUBE_API}?part=snippet&key=${YOUTUBE_API_KEY}&maxResults=5&type=video&q=${query}`);\r\n    // console.log(YOUTUBE_API_KEY)\r\n    return data\r\n}\r\n\r\nexport default fetchData ","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(9),\r\n        background: '#282C34 !important'\r\n    },\r\n    \r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    root: {\r\n        maxWidth: '100%',\r\n    },\r\n    media: {\r\n        height: '250px',\r\n        width:'100px',\r\n        // paddingTop: '56.25%', // 16:9\r\n    },\r\n    card: {\r\n        width: '300px',\r\n        height:'380px'\r\n    },\r\n   \r\n    cardContent: {\r\n        paddingTop:'20px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    // here cuts\r\n   \r\n}));","import React from 'react'\r\nimport { Card, CardMedia, CardContent,  Typography } from '@material-ui/core';\r\n// import ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport useStyles from './style'\r\nconst Video = ({ result }) => {\r\n    console.log(result)\r\n    const classes = useStyles();\r\n    const link = `https://www.youtube.com/embed/${result.id.videoId}`;\r\n    return (\r\n      \r\n        <Card className={classes.card}>\r\n        \r\n            <CardMedia className={classes.media}  title='Title of the video'>\r\n                <iframe width=\"300\" height=\"250\" src={link} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n            </CardMedia>\r\n            <CardContent>\r\n                <div className={classes.cardcontent}>\r\n                    <Typography variant='h6' gutterBottom>\r\n                        <sup>\r\n                        {result.snippet.title}\r\n                        </sup>\r\n                    </Typography>\r\n                </div>\r\n                {/* <Typography variant='body2' color='textSecondary' >{result.snippet.description}</Typography> */}\r\n            </CardContent>\r\n            \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core'\r\nimport useStyles from './style'\r\nimport Video from './Video/Video'\r\n\r\nconst Videos = ({ result }) => {\r\n    const obj = { ...result }\r\n    const classes = useStyles();\r\n    return (\r\n        <main className={classes.content}>\r\n            \r\n            <div className={classes.toolbar}>\r\n                {\r\n                    result.items && (\r\n                        <Grid container justify='center' spacing={1} className={classes.grid}>\r\n                            {obj.items.map((video) => (\r\n                                <Grid item  >\r\n                                    <Video result={video} />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n            \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Videos\r\n","import React, { useState } from 'react'\r\nimport { fetchData } from './components/api/fetchData';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Videos from './components/Videos'\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport './App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nconst App = () => {\r\n    const [result, setResult] = useState({});\r\n    const [query, setQuery] = useState('');\r\n\r\n\r\n    const search = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            const data = await fetchData(query);\r\n            setResult(data)\r\n            setQuery('');\r\n            // console.log(result)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <CssBaseline/>\r\n            <div className=\"heading\" >\r\n            <h1 >Youtube Mini</h1>\r\n            </div>\r\n          <Table striped bordered hover style={{width:'500px',height:'25px',margin:'0 auto',display:'block'}} >\r\n                <thead>\r\n                    <tr></tr>\r\n                    <tr>\r\n                    <th><YouTubeIcon color='secondary' fontSize='large'/></th>\r\n                    <th><input type='text' className='search' style={{width:'400px',height:'25px'}} placeholder=\"Search... \" value={query} onChange={(e) => {\r\n                        setQuery(e.target.value);\r\n                        console.log(e.target.value)\r\n                        }}  onKeyPress={search} /></th>\r\n                        <th><SearchIcon onClick={async () => {\r\n                            const data = await fetchData(query);\r\n                            setResult(data)\r\n                            setQuery('');\r\n                        }} color='secondary'/></th>\r\n                    </tr>\r\n                </thead>\r\n           </Table>\r\n                \r\n                \r\n                {/* <InputGroup className=\"mb-3\">\r\n                    \r\n                    <FormControl\r\n                        style={{ }}\r\n                        className='search'\r\n                        placeholder=\"Username\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                    />\r\n                    <SearchIcon />\r\n                </InputGroup> */}\r\n       \r\n                \r\n            \r\n            \r\n\r\n            \r\n            <Videos result={ result} />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\nReactDom.render(<App/> ,document.getElementById('root'))"],"sourceRoot":""}